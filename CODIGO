# Importar las librerías necesarias
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import ExtraTreesRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Cargar el dataset
df = pd.read_csv('cambio_dolar.csv')
#Exploramos los datos
print(df.head())

print(df.info())

print(df.describe())

# Convertir la columna 'fecha' a formato datetime
df['fecha'] = pd.to_datetime(df['fecha'])

# Crear una nueva característica: número de días desde la primera fecha
df['dias_desde_inicio'] = (df['fecha'] - df['fecha'].min()).dt.days

# Definir las características (X) y la variable objetivo (y)
X = df[['dias_desde_inicio']]
y = df['peso_a_dolar']

# Dividir los datos en conjunto de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Crear y entrenar el modelo ExtraTreesRegressor
model = ExtraTreesRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Hacer predicciones sobre el conjunto de prueba
y_pred = model.predict(X_test)

# Calcular métricas del modelo
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Imprimir las métricas
print(f'Error cuadrático medio (MSE): {mse:.6f}')
print(f'Coeficiente de determinación (R²): {r2:.4f}')

# Graficar resultados
plt.figure(figsize=(10, 5))

# Gráfico de dispersión: valores reales vs predicciones
plt.subplot(1, 2, 1)
plt.scatter(y_test, y_pred, alpha=0.7, color='b')
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--', lw=2)
plt.xlabel('Valores Reales')
plt.ylabel('Predicciones')
plt.title('Valores Reales vs Predicciones')

# Gráfico de líneas: predicciones vs valores reales a lo largo del tiempo
plt.subplot(1, 2, 2)
plt.plot(X_test['dias_desde_inicio'], y_test, label='Valores Reales', color='blue')
plt.plot(X_test['dias_desde_inicio'], y_pred, label='Predicciones', color='red', linestyle='--')
plt.xlabel('Días desde el inicio')
plt.ylabel('Peso a Dólar')
plt.title('Predicción vs Real a lo largo del tiempo')
plt.legend()

plt.tight_layout()
plt.show()
